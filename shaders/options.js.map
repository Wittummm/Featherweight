{
  "version": 3,
  "sources": ["../build/generateLangDummy.ts", "options.ts"],
  "sourcesContent": ["// Dummy functions that do nothing except prevent it from erroring because the function doesnt exist\r\nObject.prototype.name = function() {return this;}\r\nObject.prototype.values = function() {return this;}\r\nObject.prototype.prefix = function() {return this;}\r\nObject.prototype.suffix = function() {return this;}\r\nObject.prototype.desc = function() {return this;}\r\n", "\r\n/*\r\n4 Tiers of reloading\r\n- Need Reload(true)\r\n- Can reload(canReload)\r\n- Should reload(shouldReload)\r\n- Does not need Reload(false)\r\n*/\r\n// These are \"comment\" variables where the names describe a comment and not what the variable actually is/does\r\nconst canReload = false; // Works without needing to reload, but reloading is possible (default: false)\r\nconst shouldReload = true; // Works without needing to reload, but reloading is idle (default: true)\r\n\r\n/*\r\nSyntax notes:\r\n- PascalCase for the setting names\r\n- \"Enabled\" suffix for toggles\r\n- \"_Show\" prefix for internal/debug\r\n*/\r\nfunction texIsolate(name: string) {\r\n    return asInt(name,-1,0,1,2,3,4)\r\n    .values(\"Off\",\"Full\",\"Top Left\",\"Top Right\",\"Bottom Left\",\"Bottom Right\")\r\n    .needsReload(false).build(-1)\r\n}\r\nfunction texIsolates(...names: string[]) {\r\n    let objs = [];\r\n    for (const name of names) {\r\n        objs.push(texIsolate(name));\r\n    }\r\n    return objs;\r\n}\r\n\r\nexport function setupOptions() {\r\n    const general = new Page(\"General\")\r\n    .add(asIntRange(\"SunPathRotation\", 0, -90, 90, 5, false))\r\n    .add(asFloat(\"Pixelization\", 8, 16, 32, 64, 128, 256).needsReload(false).build(16))\r\n    .build();\r\n\r\n    const shadow = new Page(\"Shadows\")\r\n    .add(asFloatRange(\"ShadowDistort\", 0.7, 0, 1, 0.05, false))\r\n    .add(asIntRange(\"ShadowSamples\", 3, 2, 128, 1, false))\r\n    .add(asInt(\"ShadowFilter\", 0, 1, 2)\r\n        .values(\"Nearest\", \"Linear\", \"Uniform Soft\")\r\n        .needsReload(canReload).build(1)) // Nearest Linear PCF\r\n    .add(asBool(\"PresetPatternsPCF\", true, canReload))\r\n    .build()\r\n\r\n    const debug = new Page(\"Debug\")\r\n    .add(asBool(\"_DebugEnabled\", false, shouldReload))\r\n    .add(asBool(\"_DebugStats\", false, false)) // TODONOW: CONFIGTODO:\r\n    .add(asBool(\"_SliceScreen\", false, false)) // Slice or Split screen\r\n    .add(asBool(\"_ShowShadows\", false, false))\r\n    .add(EMPTY)\r\n    .add(...texIsolates(\r\n        \"_ShowShadowMap\",\r\n        \"_ShowDepth\",\r\n        \"_ShowRoughness\",\r\n        \"_ShowReflectance\",\r\n        \"_ShowPorosity\",\r\n        \"_ShowEmission\",\r\n        \"_ShowNormals\",\r\n        \"_ShowAmbientOcclusion\",\r\n        \"_ShowHeight\",\r\n    ))\r\n    .build()\r\n\r\n    const UNSORTED = new Page(\"UNSORTED\")\r\n    .add(asInt(\"Specular\", 0, 1).needsReload(false).build(1))\r\n    .build()\r\n\r\n    return new Page(\"Featherweight\")\r\n        .add(general)\r\n        .add(shadow)\r\n        .add(UNSORTED)\r\n        .add(debug)\r\n        .build();\r\n}\r\n\r\n/// Ranges\r\nfunction asIntRange(keyName: string, defaultValue: number, valueMin: number, valueMax: number, interval: number, reload: boolean = true) {\r\n    const values = getValueRange(valueMin, valueMax, interval);\r\n    return asInt(keyName, ...values).needsReload(reload).build(defaultValue);\r\n}\r\n\r\nfunction asFloatRange(keyName: string, defaultValue: number, valueMin: number, valueMax: number, interval: number, reload: boolean = true) {\r\n    const values = getValueRange(valueMin, valueMax, interval);\r\n    return asFloat(keyName, ...values).needsReload(reload).build(defaultValue);\r\n}\r\n\r\nfunction getValueRange(valueMin: number, valueMax: number, interval: number) {\r\n    const values: number[] = [];\r\n\r\n    for (let value = valueMin; value <= valueMax; value += interval) {\r\n        values.push(value);\r\n    }\r\n\r\n    return values;\r\n}\r\n\r\n// / To support lang file, comment out if generating lang file\r\nimport \"../build/generateLangDummy\"\r\n// / Generate lang file, comment out if using shader\r\n// import {EMPTY, Page, asInt, asFloat, asString, asBool, putTextLabel, putTranslationLabel, generateLang, IntSetting} from \"../build/generateLang\"\r\n// setupOptions();\r\n// generateLang();\r\n//////////////"],
  "mappings": ";AACA,OAAO,UAAU,OAAO,WAAW;AAAC,SAAO;AAAK;AAChD,OAAO,UAAU,SAAS,WAAW;AAAC,SAAO;AAAK;AAClD,OAAO,UAAU,SAAS,WAAW;AAAC,SAAO;AAAK;AAClD,OAAO,UAAU,SAAS,WAAW;AAAC,SAAO;AAAK;AAClD,OAAO,UAAU,OAAO,WAAW;AAAC,SAAO;AAAK;;;ACIhD,IAAM,YAAY;AAClB,IAAM,eAAe;AAQrB,SAAS,WAAW,MAAc;AAC9B,SAAO,MAAM,MAAK,IAAG,GAAE,GAAE,GAAE,GAAE,CAAC,EAC7B,OAAO,OAAM,QAAO,YAAW,aAAY,eAAc,cAAc,EACvE,YAAY,KAAK,EAAE,MAAM,EAAE;AAChC;AACA,SAAS,eAAe,OAAiB;AACrC,MAAI,OAAO,CAAC;AACZ,aAAW,QAAQ,OAAO;AACtB,SAAK,KAAK,WAAW,IAAI,CAAC;AAAA,EAC9B;AACA,SAAO;AACX;AAEO,SAAS,eAAe;AAC3B,QAAM,UAAU,IAAI,KAAK,SAAS,EACjC,IAAI,WAAW,mBAAmB,GAAG,KAAK,IAAI,GAAG,KAAK,CAAC,EACvD,IAAI,QAAQ,gBAAgB,GAAG,IAAI,IAAI,IAAI,KAAK,GAAG,EAAE,YAAY,KAAK,EAAE,MAAM,EAAE,CAAC,EACjF,MAAM;AAEP,QAAM,SAAS,IAAI,KAAK,SAAS,EAChC,IAAI,aAAa,iBAAiB,KAAK,GAAG,GAAG,MAAM,KAAK,CAAC,EACzD,IAAI,WAAW,iBAAiB,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC,EACpD,IAAI,MAAM,gBAAgB,GAAG,GAAG,CAAC,EAC7B,OAAO,WAAW,UAAU,cAAc,EAC1C,YAAY,SAAS,EAAE,MAAM,CAAC,CAAC,EACnC,IAAI,OAAO,qBAAqB,MAAM,SAAS,CAAC,EAChD,MAAM;AAEP,QAAM,QAAQ,IAAI,KAAK,OAAO,EAC7B,IAAI,OAAO,iBAAiB,OAAO,YAAY,CAAC,EAChD,IAAI,OAAO,eAAe,OAAO,KAAK,CAAC,EACvC,IAAI,OAAO,gBAAgB,OAAO,KAAK,CAAC,EACxC,IAAI,OAAO,gBAAgB,OAAO,KAAK,CAAC,EACxC,IAAI,KAAK,EACT,IAAI,GAAG;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,CAAC,EACA,MAAM;AAEP,QAAM,WAAW,IAAI,KAAK,UAAU,EACnC,IAAI,MAAM,YAAY,GAAG,CAAC,EAAE,YAAY,KAAK,EAAE,MAAM,CAAC,CAAC,EACvD,MAAM;AAEP,SAAO,IAAI,KAAK,eAAe,EAC1B,IAAI,OAAO,EACX,IAAI,MAAM,EACV,IAAI,QAAQ,EACZ,IAAI,KAAK,EACT,MAAM;AACf;AAGA,SAAS,WAAW,SAAiB,cAAsB,UAAkB,UAAkB,UAAkB,SAAkB,MAAM;AACrI,QAAM,SAAS,cAAc,UAAU,UAAU,QAAQ;AACzD,SAAO,MAAM,SAAS,GAAG,MAAM,EAAE,YAAY,MAAM,EAAE,MAAM,YAAY;AAC3E;AAEA,SAAS,aAAa,SAAiB,cAAsB,UAAkB,UAAkB,UAAkB,SAAkB,MAAM;AACvI,QAAM,SAAS,cAAc,UAAU,UAAU,QAAQ;AACzD,SAAO,QAAQ,SAAS,GAAG,MAAM,EAAE,YAAY,MAAM,EAAE,MAAM,YAAY;AAC7E;AAEA,SAAS,cAAc,UAAkB,UAAkB,UAAkB;AACzE,QAAM,SAAmB,CAAC;AAE1B,WAAS,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU;AAC7D,WAAO,KAAK,KAAK;AAAA,EACrB;AAEA,SAAO;AACX;",
  "names": []
}
