{
  "version": 3,
  "sources": ["modules/vector/Vec4.ts", "modules/vector/Vec3.ts", "modules/vector/Vec2.ts", "modules/FixedStreamingBuffer.ts", "modules/Settings.ts", "modules/KeyInput.ts", "modules/HelperFuncs.ts", "modules/BlockTag.ts", "modules/BlockType.ts", "pack.ts"],
  "sourcesContent": ["export class Vec4 {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  w: number;\r\n\r\n  static zero = new Vec4(0);\r\n  static one = new Vec4(1);\r\n\r\n  constructor(x: Vector4f);\r\n  constructor(x: number);\r\n  constructor(x: number, y: number, z: number, w: number);\r\n  constructor(x: number | Vector4f, y?: number, z?: number, w?: number) {\r\n    if (typeof x === \"number\" && typeof y !== \"number\") {\r\n      this.x = x; this.y = x; this.z = x; this.w = x;\r\n    } else if (x instanceof Vector4f) {\r\n      this.x = x.x(); this.y = x.y(); this.z = x.z(); this.w = x.w();\r\n    } else {\r\n      this.x = x; this.y = y!; this.z = z!; this.w = w!;\r\n    }\r\n  }\r\n\r\n  xyzw(): [number, number, number, number] {return [this.x, this.y, this.z, this.w];}\r\n  clone(): this { return new (this.constructor(...this.xyzw())); }\r\n  toVector4f(): Vector4f {return new Vector4f(...this.xyzw());}\r\n\r\n  negate(): this { this.x = -this.x; this.y = -this.y; this.z = -this.z; this.w = -this.w; return this; }\r\n\r\n  add(x: number, y: number, z: number, w: number): this;\r\n  add(other: Vec4): this;\r\n  add(x: number | Vec4, y?: number, z?: number, w?: number): this { return typeof x === \"number\" ? this.#add(x, y!, z!, w!) : this.#add(x.x, x.y, x.z, x.w); }\r\n\r\n  sub(x: number, y: number, z: number, w: number): this;\r\n  sub(other: Vec4): this;\r\n  sub(x: number | Vec4, y?: number, z?: number, w?: number): this { return typeof x === \"number\" ? this.#sub(x, y!, z!, w!) : this.#sub(x.x, x.y, x.z, x.w); }\r\n\r\n  mul(x: number, y: number, z: number, w: number): this;\r\n  mul(other: Vec4): this;\r\n  mul(x: number | Vec4, y?: number, z?: number, w?: number): this { return typeof x === \"number\" ? this.#mul(x, y!, z!, w!) : this.#mul(x.x, x.y, x.z, x.w); }\r\n  scale(v: number): this { return this.#mul(v,v,v,v); }\r\n\r\n  div(x: number, y: number, z: number, w: number): this;\r\n  div(other: Vec4): this;\r\n  div(x: number | Vec4, y?: number, z?: number, w?: number): this { return typeof x === \"number\" ? this.#div(x, y!, z!, w!) : this.#div(x.x, x.y, x.z, x.w); }\r\n\r\n  #add(x: number, y: number, z: number, w: number): this { this.x += x; this.y += y; this.z += z; this.w += w; return this; }\r\n  #sub(x: number, y: number, z: number, w: number): this { this.x -= x; this.y -= y; this.z -= z; this.w -= w; return this; }\r\n  #mul(x: number, y: number, z: number, w: number): this { this.x *= x; this.y *= y; this.z *= z; this.w *= w; return this; }\r\n  #div(x: number, y: number, z: number, w: number): this { this.x /= x; this.y /= y; this.z /= z; this.w /= w; return this; }\r\n\r\n  floor(): this {this.x = Math.floor(this.x); this.y = Math.floor(this.y); this.z = Math.floor(this.z); this.w = Math.floor(this.w); return this;}\r\n  ceil(): this {this.x = Math.ceil(this.x); this.y = Math.ceil(this.y); this.z = Math.ceil(this.z); this.w = Math.ceil(this.w); return this;}\r\n  abs(): this {this.x = Math.abs(this.x); this.y = Math.abs(this.y); this.z = Math.abs(this.z); this.w = Math.abs(this.w); return this;}\r\n  sign(): this {this.x = Math.sign(this.x); this.y = Math.sign(this.y); this.z = Math.sign(this.z); this.w = Math.sign(this.w); return this;}\r\n  min(min: Vec4): this {this.x = Math.min(this.x, min.x); this.y = Math.min(this.y, min.y); this.z = Math.min(this.z, min.z); this.w = Math.min(this.w, min.w); return this;}\r\n  max(max: Vec4): this {this.x = Math.max(this.x, max.x); this.y = Math.max(this.y, max.y); this.z = Math.max(this.z, max.z); this.w = Math.max(this.w, max.w); return this;}\r\n  clamp(min: Vec4, max: Vec4): this {this.min(max); this.max(min); return this;}\r\n\r\n  lengthSquared(): number { return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w; }\r\n  length(): number { return Math.sqrt(this.lengthSquared()); }\r\n\r\n  normalize(): this {\r\n    const len = this.length();\r\n    if (len > 0) {\r\n      return this.scale(1 / len);\r\n    }\r\n    return this;\r\n  }\r\n  dot(other: Vec4): number { return this.x * other.x + this.y * other.y + this.z * other.z + this.w * other.w; }\r\n  distanceTo(other: Vec4): number {return this.clone().sub(other).length();}\r\n}", "export class Vec3 {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n\r\n  static zero = new Vec3(0);\r\n  static one = new Vec3(1);\r\n\r\n  constructor(x: Vector3f);\r\n  constructor(x: number);\r\n  constructor(x: number, y: number, z: number);\r\n  constructor(x: number | Vector3f, y?: number, z?: number) {\r\n    if (typeof x === \"number\" && typeof y !== \"number\") {\r\n      this.x = x; this.y = x; this.z = x;\r\n    } else if (x instanceof Vector3f) {\r\n      this.x = x.x(); this.y = x.y(); this.z = x.z();\r\n    } else {\r\n      this.x = x; this.y = y!; this.z = z!;\r\n    }\r\n  }\r\n\r\n  xyz(): [number, number, number] {return [this.x, this.y, this.z];}\r\n  clone(): Vec3 { return new Vec3(...this.xyz()); }\r\n  toVector3f(): Vector3f {return new Vector3f(...this.xyz());}\r\n\r\n  negate(): this { this.x = -this.x; this.y = -this.y; this.z = -this.z; return this; }\r\n\r\n  add(x: number, y: number, z: number): this;\r\n  add(other: Vec3): this;\r\n  add(x: number | Vec3, y?: number, z?: number): this { return typeof x === \"number\" ? this.#add(x, y!, z!) : this.#add(x.x, x.y, x.z); }\r\n\r\n  sub(x: number, y: number, z: number): this;\r\n  sub(other: Vec3): this;\r\n  sub(x: number | Vec3, y?: number, z?: number): this { return typeof x === \"number\" ? this.#sub(x, y!, z!) : this.#sub(x.x, x.y, x.z); }\r\n\r\n  mul(x: number, y: number, z: number): this;\r\n  mul(other: Vec3): this;\r\n  mul(x: number | Vec3, y?: number, z?: number): this { return typeof x === \"number\" ? this.#mul(x, y!, z!) : this.#mul(x.x, x.y, x.z); }\r\n  scale(v: number): this { return this.#mul(v,v,v); }\r\n\r\n  div(x: number, y: number, z: number): this;\r\n  div(other: Vec3): this;\r\n  div(x: number | Vec3, y?: number, z?: number): this { return typeof x === \"number\" ? this.#div(x, y!, z!) : this.#div(x.x, x.y, x.z); }\r\n\r\n  #add(x: number, y: number, z: number): this { this.x += x; this.y += y; this.z += z; return this; }\r\n  #sub(x: number, y: number, z: number): this { this.x -= x; this.y -= y; this.z -= z; return this; }\r\n  #mul(x: number, y: number, z: number): this { this.x *= x; this.y *= y; this.z *= z; return this; }\r\n  #div(x: number, y: number, z: number): this { this.x /= x; this.y /= y; this.z /= z; return this; }\r\n\r\n  floor(): this {this.x = Math.floor(this.x); this.y = Math.floor(this.y); this.z = Math.floor(this.z); return this;}\r\n  ceil(): this {this.x = Math.ceil(this.x); this.y = Math.ceil(this.y); this.z = Math.ceil(this.z); return this;}\r\n  abs(): this {this.x = Math.abs(this.x); this.y = Math.abs(this.y); this.z = Math.abs(this.z); return this;}\r\n  sign(): this {this.x = Math.sign(this.x); this.y = Math.sign(this.y); this.z = Math.sign(this.z); return this;}\r\n  min(min: Vec3): this {this.x = Math.min(this.x, min.x); this.y = Math.min(this.y, min.y); this.z = Math.min(this.z, min.z); return this;}\r\n  max(max: Vec3): this {this.x = Math.max(this.x, max.x); this.y = Math.max(this.y, max.y); this.z = Math.max(this.z, max.z); return this;}\r\n  clamp(min: Vec3, max: Vec3): this {this.min(max); this.max(min); return this;}\r\n\r\n  lengthSquared(): number { return this.x * this.x + this.y * this.y + this.z * this.z; }\r\n  length(): number { return Math.sqrt(this.lengthSquared()); }\r\n\r\n  normalize(): this {\r\n    const len = this.length();\r\n    if (len > 0) {\r\n      return this.scale(1 / len);\r\n    }\r\n    return this;\r\n  }\r\n  cross(other: Vec3): Vec3 {\r\n    return new Vec3(\r\n      this.y * other.z - this.z * other.y,\r\n      this.z * other.x - this.x * other.z,\r\n      this.x * other.y - this.y * other.x\r\n    );\r\n  }\r\n  dot(other: Vec3): number { return this.x * other.x + this.y * other.y + this.z * other.z; }\r\n  distanceTo(other: Vec3): number {return this.clone().sub(other).length();}\r\n\r\n  get volume(): number { return this.x * this.y * this.z; }\r\n}", "export class Vec2 {\r\n  x: number;\r\n  y: number;\r\n\r\n  static zero = new Vec2(0);\r\n  static one = new Vec2(1);\r\n\r\n  constructor(x: Vector2f);\r\n  constructor(x: number);\r\n  constructor(x: number, y: number);\r\n  constructor(x: number | Vector2f, y?: number) {\r\n    if (typeof x === \"number\" && typeof y !== \"number\") {\r\n      this.x = x; this.y = x;\r\n    } else if (x instanceof Vector2f) {\r\n      this.x = x.x(); this.y = x.y();\r\n    } else {\r\n      this.x = x; this.y = y!;\r\n    }\r\n  }\r\n\r\n  xy(): [number, number] {return [this.x, this.y];}\r\n  clone(): this { return new (this.constructor(...this.xy())); }\r\n  toVector2f(): Vector2f {return new Vector2f(...this.xy());}\r\n\r\n  negate(): this { this.x = -this.x; this.y = -this.y; return this; }\r\n\r\n  add(x: number, y: number): this;\r\n  add(other: Vec2): this;\r\n  add(x: number | Vec2, y?: number): this { return typeof x === \"number\" ? this.#add(x, y!) : this.#add(x.x, x.y); }\r\n\r\n  sub(x: number, y: number): this;\r\n  sub(other: Vec2): this;\r\n  sub(x: number | Vec2, y?: number): this { return typeof x === \"number\" ? this.#sub(x, y!) : this.#sub(x.x, x.y); }\r\n\r\n  mul(x: number, y: number): this;\r\n  mul(other: Vec2): this;\r\n  mul(x: number | Vec2, y?: number): this { return typeof x === \"number\" ? this.#mul(x, y!) : this.#mul(x.x, x.y); }\r\n  scale(v: number): this { return this.#mul(v,v); }\r\n\r\n  div(x: number, y: number): this;\r\n  div(other: Vec2): this;\r\n  div(x: number | Vec2, y?: number): this { return typeof x === \"number\" ? this.#div(x, y!) : this.#div(x.x, x.y); }\r\n\r\n  #add(x: number, y: number): this { this.x += x; this.y += y; return this; }\r\n  #sub(x: number, y: number): this { this.x -= x; this.y -= y; return this; }\r\n  #mul(x: number, y: number): this { this.x *= x; this.y *= y; return this; }\r\n  #div(x: number, y: number): this { this.x /= x; this.y /= y; return this; }\r\n\r\n  floor(): this {this.x = Math.floor(this.x); this.y = Math.floor(this.y); return this;}\r\n  ceil(): this {this.x = Math.ceil(this.x); this.y = Math.ceil(this.y); return this;}\r\n  abs(): this {this.x = Math.abs(this.x); this.y = Math.abs(this.y); return this;}\r\n  sign(): this {this.x = Math.sign(this.x); this.y = Math.sign(this.y); return this;}\r\n  min(min: Vec2): this {this.x = Math.min(this.x, min.x); this.y = Math.min(this.y, min.y); return this;}\r\n  max(max: Vec2): this {this.x = Math.max(this.x, max.x); this.y = Math.max(this.y, max.y); return this;}\r\n  clamp(min: Vec2, max: Vec2): this {this.min(max); this.max(min); return this;}\r\n\r\n  lengthSquared(): number { return this.x * this.x + this.y * this.y; }\r\n  length(): number { return Math.sqrt(this.lengthSquared()); }\r\n\r\n  normalize(): this {\r\n    const len = this.length();\r\n    if (len > 0) {\r\n      return this.scale(1 / len);\r\n    }\r\n    return this;\r\n  }\r\n  dot(other: Vec2): number { return this.x * other.x + this.y * other.y; }\r\n  distanceTo(other: Vec2): number {return this.clone().sub(other).length();}\r\n}", "// Fixed layout buffer\r\n\r\nlet outputSettingValues = true;\r\n\r\nexport function dumpSettings(bool: boolean) {\r\n    outputSettingValues = bool;\r\n}\r\n\r\nfunction output(display?: string, value?: any) {\r\n    if (display && outputSettingValues) {sendInChat(display + `: ${value}`);}\r\n}\r\n\r\nfunction _getIntSetting(name : string) {\r\n    output(name, getIntSetting(name));\r\n    return getIntSetting(name);\r\n}\r\nfunction _getFloatSetting(name : string) {\r\n    output(name, Math.round(getFloatSetting(name)*100)*0.01);\r\n    return getFloatSetting(name);\r\n}\r\nfunction _getBoolSetting(name : string) {\r\n    output(name, getBoolSetting(name));\r\n    return getBoolSetting(name);\r\n}\r\nfunction _getStringSetting(name : string) {\r\n    output(name, getStringSetting(name));\r\n    return getStringSetting(name);\r\n}\r\nexport class FixedStreamingBuffer {\r\n    private offset: number = 0;\r\n    private align(alignment: number) { this.offset = Math.ceil(this.offset/alignment)*alignment; }\r\n\r\n    int(_?: any): FixedStreamingBuffer {this.align(4); this.offset += 4; return this;}\r\n    uint(_?: any): FixedStreamingBuffer {return this.int();}\r\n    float(_?: any): FixedStreamingBuffer {this.align(4); this.offset += 4; return this;}\r\n    bool(_?: any): FixedStreamingBuffer {this.align(4); this.offset += 4; return this;}\r\n\r\n    vec4(_?: any): FixedStreamingBuffer {this.align(16); this.offset += 4*4; return this;}\r\n    vec3(_?: any): FixedStreamingBuffer {return this.vec4();}\r\n    vec2(_?: any): FixedStreamingBuffer {this.align(8); this.offset += 4*2; return this;}\r\n\r\n    ivec4(_?: any): FixedStreamingBuffer {return this.vec4();;}\r\n    ivec3(_?: any): FixedStreamingBuffer {return this.ivec4();}\r\n    ivec2(_?: any): FixedStreamingBuffer {return this.vec2();}\r\n\r\n    build() { return new FixedBuiltStreamingBuffer(this.offset);}\r\n}\r\n\r\nexport class FixedBuiltStreamingBuffer {\r\n    constructor(byteSize: number) {\r\n        this.b = new StreamingBuffer(byteSize).build();\r\n        this.size = byteSize;\r\n    }\r\n    private size: number\r\n    private b: BuiltStreamingBuffer;\r\n    private offset: number = 0;\r\n    get buffer() {return this.b;}\r\n\r\n    get byteOffset(): number {\r\n        return this.offset;\r\n    }\r\n    private align(alignment: number) { this.offset = Math.ceil(this.offset/alignment)*alignment; }\r\n\r\n    end(): void {this.offset = 0;}\r\n    uploadData(): void {this.b.uploadData();}\r\n \r\n    int(value: number | string, display?: string) {\r\n        if (this.offset + 4 > this.size) throw new Error(`Cannot add value beyond FixedBuiltStreamingBuffer's size, ${this.offset + 4} > ${this.size}`);\r\n        value = typeof value == \"string\" ? _getIntSetting(value) : value;\r\n        output(display, value);\r\n\r\n        this.align(4);\r\n        this.b.setInt(this.offset, value);\r\n        this.offset += 4;\r\n        return this;\r\n    }\r\n    uint(value: number | string, display?: string) {return this.int(value, display);}\r\n    float(value: number | string, display?: string) {\r\n        if (this.offset + 4 > this.size) throw new Error(`Cannot add value beyond FixedBuiltStreamingBuffer's size, ${this.offset + 4} > ${this.size}`);\r\n        value = typeof value == \"string\" ? _getFloatSetting(value) : value;\r\n        output(display, value);\r\n\r\n        this.align(4);\r\n        this.b.setFloat(this.offset, value);\r\n        this.offset += 4;\r\n        return this;\r\n    }\r\n    bool(value: boolean | string, display?: string) {\r\n        if (this.offset + 4 > this.size) throw new Error(`Cannot add value beyond FixedBuiltStreamingBuffer's size, ${this.offset + 4} > ${this.size}`);\r\n        value = typeof value == \"string\" ? _getBoolSetting(value) : value;\r\n        output(display, value);\r\n\r\n        this.align(4);\r\n        this.b.setBool(this.offset, value);\r\n        this.offset += 4;\r\n        return this;\r\n    }\r\n\r\n    vec4(x: number, y: number, z: number, w: number, display?: string) {\r\n        output(display, `(${x}, ${y}, ${z}, ${w})`);\r\n\r\n        this.align(16);\r\n        this.float(x); this.float(y); \r\n        this.float(z); this.float(w);\r\n        return this;\r\n    }\r\n    vec3(x: number, y: number, z: number, display?: string) {\r\n        this.vec4(x, y, z, 0, display);\r\n        return this;\r\n    }\r\n    vec2(x: number, y: number, display?: string) {\r\n        output(display, `(${x}, ${y})`);\r\n\r\n        this.float(x); this.float(y); \r\n        return this;\r\n    }\r\n\r\n    ivec4(x: number, y: number, z: number, w: number) {\r\n        this.align(16);\r\n        this.int(x); this.int(y); \r\n        this.int(z); this.int(w);\r\n        return this;\r\n    }\r\n    ivec3(x: number, y: number, z: number) {\r\n        this.ivec4(x, y, z, 0);\r\n        return this;\r\n    }\r\n    ivec2(x: number, y: number) {\r\n        this.int(x); this.int(y); \r\n        return this;\r\n    }\r\n}", "import { Vec4, Vec3, Vec2 } from './Vector';\r\n\r\nexport class Settings {\r\n    private constructor() {}\r\n    static get SunPathRotation() {\r\n        return getIntSetting(\"SunPathRotation\");\r\n    }\r\n    static get ShadowsEnabled() {\r\n        return getBoolSetting(\"ShadowsEnabled\");\r\n    }\r\n    static get ShadowSamples() {\r\n        let t = getFloatSetting(\"ShadowSamples\");\r\n        if (t < 0) {\r\n            let softness = getFloatSetting(\"ShadowSoftness\");\r\n            // Generated via manually plotting softness&sample correlation\r\n            t = -t;\r\n            t = t * Math.floor(8 * Math.pow(softness, 0.87));\r\n            t = Math.max(t, 1);\r\n        }\r\n\r\n        return t;\r\n    }\r\n    static get ExposureSamples() {\r\n        let exposureSamplesX = getIntSetting(\"ExposureSamplesX\");\r\n        let exposureSamplesY = Math.floor(exposureSamplesX * (screenHeight/screenWidth));\r\n        \r\n        return new Vec2(exposureSamplesX, exposureSamplesY);\r\n    }\r\n}", "const lastKeyDowns: boolean[] = [];\r\n\r\nexport class KeyInput {\r\n    static update() { // Required to be called every frame\r\n        lastKeyDowns[Keys.UNKNOWN] = isKeyDown(Keys.UNKNOWN);\r\n        lastKeyDowns[Keys.SPACE] = isKeyDown(Keys.SPACE);\r\n        lastKeyDowns[Keys.APOSTROPHE] = isKeyDown(Keys.APOSTROPHE);\r\n        lastKeyDowns[Keys.COMMA] = isKeyDown(Keys.COMMA);\r\n        lastKeyDowns[Keys.MINUS] = isKeyDown(Keys.MINUS);\r\n        lastKeyDowns[Keys.PERIOD] = isKeyDown(Keys.PERIOD);\r\n        lastKeyDowns[Keys.SLASH] = isKeyDown(Keys.SLASH);\r\n        lastKeyDowns[Keys[\"0\"]] = isKeyDown(Keys[\"0\"]);\r\n        lastKeyDowns[Keys[\"1\"]] = isKeyDown(Keys[\"1\"]);\r\n        lastKeyDowns[Keys[\"2\"]] = isKeyDown(Keys[\"2\"]);\r\n        lastKeyDowns[Keys[\"3\"]] = isKeyDown(Keys[\"3\"]);\r\n        lastKeyDowns[Keys[\"4\"]] = isKeyDown(Keys[\"4\"]);\r\n        lastKeyDowns[Keys[\"5\"]] = isKeyDown(Keys[\"5\"]);\r\n        lastKeyDowns[Keys[\"6\"]] = isKeyDown(Keys[\"6\"]);\r\n        lastKeyDowns[Keys[\"7\"]] = isKeyDown(Keys[\"7\"]);\r\n        lastKeyDowns[Keys[\"8\"]] = isKeyDown(Keys[\"8\"]);\r\n        lastKeyDowns[Keys[\"9\"]] = isKeyDown(Keys[\"9\"]);\r\n        lastKeyDowns[Keys.SEMICOLON] = isKeyDown(Keys.SEMICOLON);\r\n        lastKeyDowns[Keys.EQUAL] = isKeyDown(Keys.EQUAL);\r\n        lastKeyDowns[Keys.A] = isKeyDown(Keys.A);\r\n        lastKeyDowns[Keys.B] = isKeyDown(Keys.B);\r\n        lastKeyDowns[Keys.C] = isKeyDown(Keys.C);\r\n        lastKeyDowns[Keys.D] = isKeyDown(Keys.D);\r\n        lastKeyDowns[Keys.E] = isKeyDown(Keys.E);\r\n        lastKeyDowns[Keys.F] = isKeyDown(Keys.F);\r\n        lastKeyDowns[Keys.G] = isKeyDown(Keys.G);\r\n        lastKeyDowns[Keys.H] = isKeyDown(Keys.H);\r\n        lastKeyDowns[Keys.I] = isKeyDown(Keys.I);\r\n        lastKeyDowns[Keys.J] = isKeyDown(Keys.J);\r\n        lastKeyDowns[Keys.K] = isKeyDown(Keys.K);\r\n        lastKeyDowns[Keys.L] = isKeyDown(Keys.L);\r\n        lastKeyDowns[Keys.M] = isKeyDown(Keys.M);\r\n        lastKeyDowns[Keys.N] = isKeyDown(Keys.N);\r\n        lastKeyDowns[Keys.O] = isKeyDown(Keys.O);\r\n        lastKeyDowns[Keys.P] = isKeyDown(Keys.P);\r\n        lastKeyDowns[Keys.Q] = isKeyDown(Keys.Q);\r\n        lastKeyDowns[Keys.R] = isKeyDown(Keys.R);\r\n        lastKeyDowns[Keys.S] = isKeyDown(Keys.S);\r\n        lastKeyDowns[Keys.T] = isKeyDown(Keys.T);\r\n        lastKeyDowns[Keys.U] = isKeyDown(Keys.U);\r\n        lastKeyDowns[Keys.V] = isKeyDown(Keys.V);\r\n        lastKeyDowns[Keys.W] = isKeyDown(Keys.W);\r\n        lastKeyDowns[Keys.X] = isKeyDown(Keys.X);\r\n        lastKeyDowns[Keys.Y] = isKeyDown(Keys.Y);\r\n        lastKeyDowns[Keys.Z] = isKeyDown(Keys.Z);\r\n        lastKeyDowns[Keys.LEFT_BRACKET] = isKeyDown(Keys.LEFT_BRACKET);\r\n        lastKeyDowns[Keys.BACKSLASH] = isKeyDown(Keys.BACKSLASH);\r\n        lastKeyDowns[Keys.RIGHT_BRACKET] = isKeyDown(Keys.RIGHT_BRACKET);\r\n        lastKeyDowns[Keys.GRAVE_ACCENT] = isKeyDown(Keys.GRAVE_ACCENT);\r\n        lastKeyDowns[Keys.WORLD_1] = isKeyDown(Keys.WORLD_1);\r\n        lastKeyDowns[Keys.WORLD_2] = isKeyDown(Keys.WORLD_2);\r\n        lastKeyDowns[Keys.ESCAPE] = isKeyDown(Keys.ESCAPE);\r\n        lastKeyDowns[Keys.ENTER] = isKeyDown(Keys.ENTER);\r\n        lastKeyDowns[Keys.TAB] = isKeyDown(Keys.TAB);\r\n        lastKeyDowns[Keys.BACKSPACE] = isKeyDown(Keys.BACKSPACE);\r\n        lastKeyDowns[Keys.INSERT] = isKeyDown(Keys.INSERT);\r\n        lastKeyDowns[Keys.DELETE] = isKeyDown(Keys.DELETE);\r\n        lastKeyDowns[Keys.RIGHT] = isKeyDown(Keys.RIGHT);\r\n        lastKeyDowns[Keys.LEFT] = isKeyDown(Keys.LEFT);\r\n        lastKeyDowns[Keys.DOWN] = isKeyDown(Keys.DOWN);\r\n        lastKeyDowns[Keys.UP] = isKeyDown(Keys.UP);\r\n        lastKeyDowns[Keys.PAGE_UP] = isKeyDown(Keys.PAGE_UP);\r\n        lastKeyDowns[Keys.PAGE_DOWN] = isKeyDown(Keys.PAGE_DOWN);\r\n        lastKeyDowns[Keys.HOME] = isKeyDown(Keys.HOME);\r\n        lastKeyDowns[Keys.END] = isKeyDown(Keys.END);\r\n        lastKeyDowns[Keys.CAPS_LOCK] = isKeyDown(Keys.CAPS_LOCK);\r\n        lastKeyDowns[Keys.SCROLL_LOCK] = isKeyDown(Keys.SCROLL_LOCK);\r\n        lastKeyDowns[Keys.NUM_LOCK] = isKeyDown(Keys.NUM_LOCK);\r\n        lastKeyDowns[Keys.PRINT_SCREEN] = isKeyDown(Keys.PRINT_SCREEN);\r\n        lastKeyDowns[Keys.PAUSE] = isKeyDown(Keys.PAUSE);\r\n        lastKeyDowns[Keys.F1] = isKeyDown(Keys.F1);\r\n        lastKeyDowns[Keys.F2] = isKeyDown(Keys.F2);\r\n        lastKeyDowns[Keys.F3] = isKeyDown(Keys.F3);\r\n        lastKeyDowns[Keys.F4] = isKeyDown(Keys.F4);\r\n        lastKeyDowns[Keys.F5] = isKeyDown(Keys.F5);\r\n        lastKeyDowns[Keys.F6] = isKeyDown(Keys.F6);\r\n        lastKeyDowns[Keys.F7] = isKeyDown(Keys.F7);\r\n        lastKeyDowns[Keys.F8] = isKeyDown(Keys.F8);\r\n        lastKeyDowns[Keys.F9] = isKeyDown(Keys.F9);\r\n        lastKeyDowns[Keys.F10] = isKeyDown(Keys.F10);\r\n        lastKeyDowns[Keys.F11] = isKeyDown(Keys.F11);\r\n        lastKeyDowns[Keys.F12] = isKeyDown(Keys.F12);\r\n        lastKeyDowns[Keys.F13] = isKeyDown(Keys.F13);\r\n        lastKeyDowns[Keys.F14] = isKeyDown(Keys.F14);\r\n        lastKeyDowns[Keys.F15] = isKeyDown(Keys.F15);\r\n        lastKeyDowns[Keys.F16] = isKeyDown(Keys.F16);\r\n        lastKeyDowns[Keys.F17] = isKeyDown(Keys.F17);\r\n        lastKeyDowns[Keys.F18] = isKeyDown(Keys.F18);\r\n        lastKeyDowns[Keys.F19] = isKeyDown(Keys.F19);\r\n        lastKeyDowns[Keys.F20] = isKeyDown(Keys.F20);\r\n        lastKeyDowns[Keys.F21] = isKeyDown(Keys.F21);\r\n        lastKeyDowns[Keys.F22] = isKeyDown(Keys.F22);\r\n        lastKeyDowns[Keys.F23] = isKeyDown(Keys.F23);\r\n        lastKeyDowns[Keys.F24] = isKeyDown(Keys.F24);\r\n        lastKeyDowns[Keys.F25] = isKeyDown(Keys.F25);\r\n        lastKeyDowns[Keys.KP_0] = isKeyDown(Keys.KP_0);\r\n        lastKeyDowns[Keys.KP_1] = isKeyDown(Keys.KP_1);\r\n        lastKeyDowns[Keys.KP_2] = isKeyDown(Keys.KP_2);\r\n        lastKeyDowns[Keys.KP_3] = isKeyDown(Keys.KP_3);\r\n        lastKeyDowns[Keys.KP_4] = isKeyDown(Keys.KP_4);\r\n        lastKeyDowns[Keys.KP_5] = isKeyDown(Keys.KP_5);\r\n        lastKeyDowns[Keys.KP_6] = isKeyDown(Keys.KP_6);\r\n        lastKeyDowns[Keys.KP_7] = isKeyDown(Keys.KP_7);\r\n        lastKeyDowns[Keys.KP_8] = isKeyDown(Keys.KP_8);\r\n        lastKeyDowns[Keys.KP_9] = isKeyDown(Keys.KP_9);\r\n        lastKeyDowns[Keys.KP_DECIMAL] = isKeyDown(Keys.KP_DECIMAL);\r\n        lastKeyDowns[Keys.KP_DIVIDE] = isKeyDown(Keys.KP_DIVIDE);\r\n        lastKeyDowns[Keys.KP_MULTIPLY] = isKeyDown(Keys.KP_MULTIPLY);\r\n        lastKeyDowns[Keys.KP_SUBTRACT] = isKeyDown(Keys.KP_SUBTRACT);\r\n        lastKeyDowns[Keys.KP_ADD] = isKeyDown(Keys.KP_ADD);\r\n        lastKeyDowns[Keys.KP_ENTER] = isKeyDown(Keys.KP_ENTER);\r\n        lastKeyDowns[Keys.KP_EQUAL] = isKeyDown(Keys.KP_EQUAL);\r\n        lastKeyDowns[Keys.LEFT_SHIFT] = isKeyDown(Keys.LEFT_SHIFT);\r\n        lastKeyDowns[Keys.LEFT_CONTROL] = isKeyDown(Keys.LEFT_CONTROL);\r\n        lastKeyDowns[Keys.LEFT_ALT] = isKeyDown(Keys.LEFT_ALT);\r\n        lastKeyDowns[Keys.LEFT_SUPER] = isKeyDown(Keys.LEFT_SUPER);\r\n        lastKeyDowns[Keys.RIGHT_SHIFT] = isKeyDown(Keys.RIGHT_SHIFT);\r\n        lastKeyDowns[Keys.RIGHT_CONTROL] = isKeyDown(Keys.RIGHT_CONTROL);\r\n        lastKeyDowns[Keys.RIGHT_ALT] = isKeyDown(Keys.RIGHT_ALT);\r\n        lastKeyDowns[Keys.RIGHT_SUPER] = isKeyDown(Keys.RIGHT_SUPER);\r\n        lastKeyDowns[Keys.MENU] = isKeyDown(Keys.MENU);\r\n        lastKeyDowns[Keys.LAST] = isKeyDown(Keys.LAST);\r\n    }\r\n    static onKeyDown(key: number): boolean {if (!lastKeyDowns[key] && isKeyDown(key)) return true;}\r\n    static onKeyUp(key: number): boolean {if (lastKeyDowns[key] && !isKeyDown(key)) return true;}\r\n}", "export function toggleBoolSetting(name: string) {\r\n    setBoolSetting(name, !getBoolSetting(name));\r\n}", "function autoName(name: string|null, internalName: string) {\r\n    return name ? name : (\"TAG_\"+internalName.toUpperCase());\r\n}\r\n\r\nlet outputTags = false;\r\n\r\nexport function dumpTags(bool: boolean) {\r\n    outputTags = bool;\r\n}\r\n\r\nexport class Tagger {\r\n    private static index: number = 0;\r\n    private static nameIndexMap: [string?: number] = [];\r\n\r\n    static tagNamespace(namespace: NamespacedId, name?: string) {\r\n        if (this.index >= 32) {throw new RangeError(`Tag index is more than 32: ${this.index}`)}\r\n        name = autoName(name, namespace.getNamespace());\r\n        if (Tagger.nameIndexMap[name]) {throw new Error(`Duplicate tag: ${name}`)}\r\n        if (outputTags) {sendInChat(`${this.index} ${name}`);}\r\n\r\n        addTag(this.index, namespace);\r\n        defineGlobally(name, this.index);\r\n        this.index++;\r\n    }\r\n    static tag(namespace: string, value?: string, name?: string) {\r\n        name = autoName(name, value ? value : namespace);\r\n        this.tagNamespace(value ? new NamespacedId(namespace, value) : new NamespacedId(namespace), name);\r\n    }\r\n    static tags(name: string|null, namespace: string, ...values: string[]) {\r\n        name = autoName(name, namespace);\r\n\r\n        let namespaces = [];\r\n        for (let value of values) {\r\n            namespaces.push(new NamespacedId(value));\r\n        }\r\n\r\n        this.tagNamespace(createTag(new NamespacedId(namespace), ...namespaces), name);\r\n    }\r\n}\r\n\r\nexport const mc = \"minecraft\";\r\nexport const sh = \"shader\";\r\nexport const ap = \"aperture\";", "/*\r\nPotential issue: I dont think this supports handling the same block with different properties\r\n*/\r\n\r\nlet index = 1; // 0 reserved for undefined type\r\nconst namespacedIdData: [\r\n    string?: {\r\n        id: number,\r\n        properties: string[][],\r\n    }\r\n] = [];\r\n\r\nexport function addType(type: string, ...paths: string[]) {\r\n    defineGlobally(\"TYPE_\"+type.toUpperCase(), index);\r\n\r\n    for (let path of paths) {\r\n        let splits = path.split(\":\")\r\n        let namespacedId = splits[0]+\":\"+splits[1];\r\n\r\n        let properties = [];\r\n        for (let part of splits) {\r\n            if (part.includes(\"=\")) {\r\n                let sepIndex = part.indexOf(\"=\");\r\n                let property = part.substring(0, sepIndex);\r\n                let values = part.substring(sepIndex+1);\r\n\r\n                properties[property] = values.split(\",\");\r\n            }\r\n        }\r\n\r\n        namespacedIdData[namespacedId] = {id: index, properties: properties};\r\n    }\r\n    index++;\r\n}\r\n\r\nexport function getType(blockState: BlockState) {\r\n    let data = namespacedIdData[blockState.getNamespace()+\":\"+blockState.getName()];\r\n    \r\n    if (data !== undefined) {\r\n        let doesNotMatch = false;\r\n        for (let [property, values] of data.properties.entries()) {\r\n            if (blockState.hasState(property)) {\r\n                for (let value in values) {\r\n                    doesNotMatch = (blockState.getState(property) != value);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!doesNotMatch) {\r\n            return data.id < 4096 ? data.id : 0; // Limited to 2^12, because i doubt anyone would have more\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "import { Vec4, Vec3, Vec2 } from './modules/Vector';\r\nimport { FixedBuiltStreamingBuffer, FixedStreamingBuffer, dumpSettings } from './modules/FixedStreamingBuffer';\r\nimport { Settings } from './modules/Settings';\r\nimport { KeyInput } from './modules/KeyInput';\r\nimport { toggleBoolSetting } from './modules/HelperFuncs';\r\nimport { dumpTags, Tagger, mc, sh, ap } from './modules/BlockTag';\r\nimport { addType, getType } from './modules/BlockType';\r\n\r\n// Consts\r\nconst DEBUG_CONFIG = {\r\n    debug: true,\r\n    outputToChat: true,\r\n}\r\nconst distancePerShadowCascade = 96;\r\n// Variables\r\nlet debugBuffer: FixedBuiltStreamingBuffer | null;\r\nlet settingsBuffer: FixedBuiltStreamingBuffer;\r\nlet metadataBuffer: BuiltGPUBuffer;\r\nlet shadowCascadeCount: number = -1;\r\n//// Helper Funcs ////\r\nfunction initSettings(state?: WorldState) { // Settings initialized once on shader setup\r\n    worldSettings.ambientOcclusionLevel = 1.0;\r\n    worldSettings.mergedHandDepth = true; \r\n    worldSettings.shadowMapDistance = getIntSetting(\"ShadowDistance\");\r\n    worldSettings.renderStars = true;\r\n\r\n    dumpTags(getBoolSetting(\"_DumpTags\"));\r\n}\r\nfunction setupSettings(state?: WorldState) {\r\n    // CODE: sadi1n NOTE: TODOEVENTUALLY: TEMP: BELOW IS TEMPORARY, Aperture currently has strict reloading features\r\n    function requestReload(msg) { sendInChat(`Request Reload: ${msg}`); }\r\n    \r\n    if (getIntSetting(\"ShadowCascadeCount\") == 0 && worldSettings.shadowMapDistance != getIntSetting(\"ShadowDistance\")) {\r\n        if (Math.ceil(worldSettings.shadowMapDistance/distancePerShadowCascade) != Math.ceil(getIntSetting(\"ShadowDistance\")/distancePerShadowCascade)) {\r\n            requestReload(\"When changing Shadow Distance and Shadow Cascade is Auto.\")\r\n        }\r\n    }\r\n    ///////////\r\n\r\n\r\n    worldSettings.sunPathRotation = Settings.SunPathRotation;\r\n    worldSettings.shadowMapDistance = getIntSetting(\"ShadowDistance\"); // TODOEVENTUALLY IMPROVE: should clamp to render distance\r\n    if (shadowCascadeCount == 1) { // NOTE: AP_BUG: TODOEVENTUALLY: This is presumbly a bug in Aperture as Arc 2 also does this workaround\r\n        worldSettings.shadowNearPlane = 1.5*-worldSettings.shadowMapDistance; \r\n        worldSettings.shadowFarPlane = 1.5*worldSettings.shadowMapDistance; \r\n\r\n        // Closer to Aperture's default while not being broken, but has worse shadow acne\r\n        // worldSettings.shadowNearPlane = -worldSettings.shadowMapDistance; \r\n        // worldSettings.shadowFarPlane = 256-worldSettings.shadowMapDistance; \r\n    }\r\n\r\n    // Non Aperture/Built in Settings\r\n    dumpSettings(getBoolSetting(\"_DumpUniforms\"));\r\n\r\n    const shadowBias = getFloatSetting(\"ShadowBias\") / worldSettings.shadowMapResolution;\r\n\r\n    // TODOEVENTUALLY: is static for now but can/should be user customizable when Aperture supports vec4/vec3 sliders\r\n    let LightSunrise =      new Vec4(0.984, 0.702, 0.275, 0.9);\r\n    let LightMorning =      new Vec4(0.941, 0.855, 0.7, 1);\r\n    let LightNoon =         new Vec4(0.92, 0.898, 0.8, 1.15); // temp\r\n    let LightAfternoon =    new Vec4(0.9625, 0.807, 0.7, 1);\r\n    let LightSunset =       new Vec4(0.984, 0.6235, 0.2627, 0.9);\r\n    let LightNightStart =   new Vec4(0.1451, 0.14513, 0.23137, 0.8);\r\n    let LightMidnight =     new Vec4(0.0588, 0.04706, 0.1412, 0.75);\r\n    let LightNightEnd =     new Vec4(0, 0, 0.035, 0.8);\r\n    let LightRain =         new Vec4(0.306, 0.408, 0.506, 0.8);\r\n\r\n    if (debugBuffer) {\r\n        LightSunrise.w *= getFloatSetting(\"_ShadowLightBrightness\")\r\n        LightMorning.w *= getFloatSetting(\"_ShadowLightBrightness\")\r\n        LightNoon.w *= getFloatSetting(\"_ShadowLightBrightness\")\r\n        LightAfternoon.w *= getFloatSetting(\"_ShadowLightBrightness\")\r\n        LightSunset.w *= getFloatSetting(\"_ShadowLightBrightness\")\r\n        LightNightStart.w *= getFloatSetting(\"_ShadowLightBrightness\")\r\n        LightMidnight.w *= getFloatSetting(\"_ShadowLightBrightness\")\r\n        LightNightEnd.w *= getFloatSetting(\"_ShadowLightBrightness\")\r\n        LightRain.w *= getFloatSetting(\"_ShadowLightBrightness\")\r\n\r\n        debugBuffer\r\n        .bool(\"_DebugEnabled\")\r\n        .bool(\"_DebugStats\")\r\n        .bool(\"_SliceScreen\")\r\n        .int(\"_ShowDepth\")\r\n        .int(\"_ShowRoughness\")\r\n        .int(\"_ShowReflectance\")\r\n        .int(\"_ShowPorosity\")\r\n        .int(\"_ShowEmission\")\r\n        .int(\"_ShowNormals\")\r\n        .int(\"_ShowAmbientOcclusion\")\r\n        .int(\"_ShowHeight\")\r\n        .int(\"_ShowShadowMap\")\r\n        .bool(\"_ShowShadows\")\r\n        .bool(\"_ShowShadowCascades\")\r\n        .int(\"_ShadowCascadeIndex\")\r\n        .float(\"_DebugUIScale\")\r\n        .bool(\"_DisplayAtmospheric\")\r\n        .bool(\"_DisplaySunlightColors\")\r\n        .bool(\"_DisplayCameraData\")\r\n        .end()\r\n    }\r\n    \r\n    settingsBuffer\r\n    .float(0, \"Rain\") // rain but changes based on biome\r\n    .float(0, \"Wetness\") // \"Slow\" rain\r\n\r\n    // Computed on cpu\r\n    .vec4(...LightSunrise.xyzw(), \"LightSunrise\")\r\n    .vec4(...LightMorning.xyzw(), \"LightMorning\")\r\n    .vec4(...LightNoon.xyzw(), \"LightNoon\")\r\n    .vec4(...LightAfternoon.xyzw(), \"LightAfternoon\")\r\n    .vec4(...LightSunset.xyzw(), \"LightSunset\")\r\n    .vec4(...LightNightStart.xyzw(), \"LightNightStart\")\r\n    .vec4(...LightMidnight.xyzw(), \"LightMidnight\")\r\n    .vec4(...LightNightEnd.xyzw(), \"LightNightEnd\")\r\n    .vec4(...LightRain.xyzw(), \"LightRain\")\r\n    // Shadows\r\n    .int(shadowCascadeCount, \"ShadowCascadeCount\") \r\n    .int(Settings.ShadowSamples, \"ShadowSamples\")\r\n    .int(\"ShadowFilter\")\r\n    .float(\"ShadowDistort\")\r\n    .float(\"ShadowSoftness\")\r\n    .float(shadowBias, \"Initial ShadowBias\")\r\n    .float(\"ShadowThreshold\")\r\n    // Pixelization\r\n    .int(getPixelizationOverride(\"ShadingPixelization\"), \"ShadingPixelization\")\r\n    .int(getPixelizationOverride(\"ShadowPixelization\"), \"ShadowPixelization\")\r\n    // Shading\r\n    .int(\"Specular\")\r\n    .float(\"NormalStrength\")\r\n\r\n    // Camera/Visuals\r\n    .int(\"AutoExposure\")\r\n    .float(Math.exp(getFloatSetting(\"ExposureMult\")), \"ExposureMult\")\r\n    .float(\"ExposureSpeed\")\r\n    .int(\"Tonemap\")\r\n    .bool(\"CompareTonemaps\")\r\n    .ivec4(getIntSetting(\"Tonemap1\"), getIntSetting(\"Tonemap2\"), getIntSetting(\"Tonemap3\"), getIntSetting(\"Tonemap4\"))\r\n    // Atmospheric\r\n    .int(\"Sky\")\r\n    .int(\"Stars\")\r\n    .float(\"StarAmount\")\r\n    .bool(\"DisableMoonHalo\")\r\n    .bool(\"IsolateCelestials\")\r\n    \r\n    .end()\r\n}\r\nfunction setupTags() {\r\n    // This needs to run before registering programs\r\n}\r\n\r\nfunction setupTypes() {\r\n    // defineGlobally(\"isType(blockId, tag)\", \"(iris_getCustomId(blockId) == tag)\"); // This doesnt seem to work currently :(\r\n\r\n    addType(\"water\", \"minecraft:water\", \"minecraft:flowing_water\");\r\n}\r\n\r\nfunction setup() {    \r\n    //// Declarations\r\n    defineGlobally(\"SCENE_FORMAT\", \"r11f_g11f_b10f\");\r\n    let sceneTexture = new Texture(\"sceneTex\").imageName(\"sceneImg\").format(Format.R11F_G11F_B10F).mipmap(true).build();\r\n    let gbufferTexture = new Texture(\"gbufferTex\").imageName(\"gbufferImg\").format(Format.RG32UI).build();\r\n\r\n    /////// Helper Funcs ///////////\r\n    function define<T>(shader: T, name: string) {\r\n        if (getBoolSetting(name)) {\r\n            shader.define(name, \"\");\r\n        }\r\n        return shader;\r\n    }\r\n    function terrainProgram(usage: ProgramUsage, name: string, programName?: string): ObjectShader {\r\n        let program = new ObjectShader(programName || name, usage);\r\n        define(program, \"ShadowsEnabled\");\r\n        \r\n        return bindSettings(program)\r\n        .vertex(`programs/geometry/${name}.vsh`)\r\n        .fragment(`programs/geometry/${name}.fsh`)\r\n        .target(0, sceneTexture)\r\n        .target(1, gbufferTexture).blendOff(1)\r\n    }\r\n    function bindSettings<T>(program: T): T {\r\n        program.define(\"INCLUDE_SETTINGS\", \"\");\r\n        return bindMetadata(program).ubo(0, settingsBuffer.buffer);\r\n    }\r\n    function bindMetadata<T>(program: T): T {\r\n        program.define(\"INCLUDE_METADATA\", \"\");\r\n        return program.ssbo(0, metadataBuffer);\r\n    }\r\n    function generateMipmap(stage: ProgramStage, ...textures: BuiltTexture[]) {\r\n        registerShader(stage, new GenerateMips(...textures));\r\n    }\r\n    /////// Actual Functions ////////\r\n    function setupResources() { \r\n        // Only use for forward declared/global scope resources\r\n        debugBuffer = getBoolSetting(\"_DebugEnabled\") ? new FixedStreamingBuffer().bool().bool().bool().int().int().int().int().int().int().int().int().int().bool().bool().int().float().bool().bool().bool().build() : null;\r\n        settingsBuffer = new FixedStreamingBuffer().float().float().vec4().vec4().vec4().vec4().vec4().vec4().vec4().vec4().vec4().int().int().int().float().float().float().float().int().int().int().int().float().float().float().int().bool().ivec4().int().int().float().bool().bool().build();\r\n        metadataBuffer = new GPUBuffer(72).build();\r\n    }\r\n    function setupPrograms() {\r\n        registerShader(Stage.PRE_RENDER, bindSettings(new Compute(\"init_settings\"))\r\n            .location(\"programs/init/settings.csh\").workGroups(1,1,1).build()); \r\n\r\n        // Terraain\r\n        registerShader(terrainProgram(Usage.TERRAIN_SOLID, \"geometry_main\", \"terrain_solid\")\r\n            .blendOff(0).build()\r\n        );\r\n        registerShader(terrainProgram(Usage.TERRAIN_CUTOUT, \"geometry_main\", \"terrain_cutout\")\r\n            .blendOff(0)\r\n            .define(\"CUTOUT\", \"\").build()\r\n        );\r\n        registerShader(terrainProgram(Usage.TERRAIN_TRANSLUCENT, \"geometry_main\", \"terrain_translucent\")\r\n            .define(\"FORWARD\", \"\").build()\r\n        );\r\n\r\n        // Sky\r\n        registerShader(new ObjectShader(\"sky_textured\", Usage.SKY_TEXTURES)\r\n            .vertex(\"programs/geometry/sky_textured.vsh\")\r\n            .fragment(\"programs/geometry/sky_textured.fsh\")\r\n            .target(0, sceneTexture)\r\n            .blendFunc(0, Func.ONE, Func.ONE, Func.ONE, Func.ONE)\r\n            .build()\r\n        );\r\n\r\n        registerShader(bindSettings(new ObjectShader(\"sky_basic\", Usage.SKYBOX))\r\n            .vertex(\"programs/geometry/sky_basic.vsh\")\r\n            .fragment(\"programs/geometry/sky_basic.fsh\")\r\n            .target(0, sceneTexture)\r\n            .build()\r\n        );\r\n\r\n        // Deferred\r\n        registerShader(Stage.PRE_TRANSLUCENT, bindSettings(define(new Compute(\"shade\"), \"ShadowsEnabled\"))\r\n            .location(\"programs/post_opaque/shade.csh\")\r\n            .workGroups(Math.ceil(screenWidth/16), Math.ceil(screenHeight/16), 1).build()\r\n        ); \r\n\r\n        // / Shadows\r\n        if (Settings.ShadowsEnabled) {\r\n            shadowCascadeCount = getIntSetting(\"ShadowCascadeCount\");\r\n            if (shadowCascadeCount <= 0) {\r\n                shadowCascadeCount = Math.ceil(worldSettings.shadowMapDistance/distancePerShadowCascade); \r\n            }\r\n        \r\n            enableShadows(Math.floor(getIntSetting(\"ShadowResolution\")/shadowCascadeCount), shadowCascadeCount)\r\n            registerShader(bindSettings(new ObjectShader(\"shadow\", Usage.SHADOW)) // TODOEVENTUALLY: separate for cutout to early z check\r\n                .vertex(`programs/geometry/shadow.vsh`)\r\n                .fragment(`programs/geometry/shadow.fsh`)\r\n                .define(\"CUTOUT\", \"\")\r\n                .build()\r\n            )\r\n        }\r\n\r\n        /// Auto Exposure ///\r\n        if (getIntSetting(\"AutoExposure\") > 0) {\r\n            generateMipmap(Stage.POST_RENDER, sceneTexture);\r\n            registerShader(Stage.POST_RENDER, bindSettings(new Compute(\"auto_exposure\"))\r\n                .location(\"programs/post_render/auto_exposure.csh\")\r\n                .workGroups(1, 1, 1)\r\n                .define(\"ExposureSamplesX\", Settings.ExposureSamples.x.toString())\r\n                .define(\"ExposureSamplesY\", Settings.ExposureSamples.y.toString())\r\n                .build()\r\n            );\r\n        }\r\n\r\n        if (debugBuffer) {\r\n            registerShader(Stage.POST_RENDER, define(bindSettings(new Compute(\"debug\")), \"ShadowsEnabled\")\r\n                .location(\"programs/post_render/debug.csh\")\r\n                .workGroups(Math.ceil(screenWidth/16), Math.ceil(screenHeight/16), 1)\r\n                .ubo(0, debugBuffer.buffer).build()\r\n            ); \r\n        }\r\n        /////////////////////\r\n\r\n        setCombinationPass(bindSettings(new CombinationPass(\"programs/finalize/final.fsh\")).build());\r\n    }\r\n\r\n    initSettings();\r\n    setupTags();\r\n    setupTypes();\r\n    setupResources();\r\n    setupPrograms();\r\n    setupSettings();\r\n}\r\n\r\n/////// Aperture Pipeline ///////\r\nexport function onSettingsChanged(state: WorldState) {\r\n    setupSettings(state);\r\n\r\n    // Crashes for some reason idk\r\n    // setHidden(\"_ShowShadowMap\", false);\r\n    // setHidden(\"ShadowSoftness\", getIntSetting(\"ShadowFilter\") == 2);\r\n    // setHidden(\"ShadowSamples\", getIntSetting(\"ShadowFilter\") == 2);\r\n\r\n    // setHidden(\"Tonemap1\", getBoolSetting(\"CompareTonemaps\"));\r\n    // setHidden(\"Tonemap2\", getBoolSetting(\"CompareTonemaps\"));\r\n    // setHidden(\"Tonemap3\", getBoolSetting(\"CompareTonemaps\"));\r\n    // setHidden(\"Tonemap4\", getBoolSetting(\"CompareTonemaps\"));\r\n}\r\n\r\nexport function setupShader(dimension: NamespacedId) {\r\n    setup()\r\n}\r\n\r\nexport function getBlockId(block: BlockState): number {\r\n    // This runs in runtime when block changes, so it should be optimized\r\n    return getType(block);\r\n}\r\n\r\nexport function setupFrame(state: WorldState) {\r\n    settingsBuffer.uploadData();\r\n    if (debugBuffer) {\r\n        debugBuffer.uploadData();\r\n\r\n        if (KeyInput.onKeyDown(Keys.E)) {\r\n            toggleBoolSetting(\"_DebugEnabled\");\r\n            if (getBoolSetting(\"_DebugEnabled\")) {sendInChat(\"Debug mode enabled, may need reload to work\");}\r\n        }\r\n\r\n        if (KeyInput.onKeyDown(Keys.LEFT)) {setIntSetting(\"SunPathRotation\", getIntSetting(\"SunPathRotation\") - 5);}\r\n        if (KeyInput.onKeyDown(Keys.RIGHT)) {setIntSetting(\"SunPathRotation\", getIntSetting(\"SunPathRotation\") + 5);}\r\n\r\n        // KeyInput.update() is NOT cheap, it is currently 0.5 ms on my machine so beware!!!\r\n        KeyInput.update(); // Must be last\r\n    }\r\n}\r\n\r\n////Misc Helpers//////\r\n\r\nfunction getPixelizationOverride(name: string) {\r\n    const basePixelization = getIntSetting(\"Pixelization\");\r\n    const pixelization = getFloatSetting(name);\r\n\r\n    return Math.floor((pixelization < 0) ? -pixelization*basePixelization : pixelization);\r\n}"],
  "mappings": "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",
  "names": ["add_fn", "sub_fn", "mul_fn", "div_fn", "add_fn", "sub_fn", "mul_fn", "div_fn"]
}
